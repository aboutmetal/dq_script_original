Dim SystemTime,DateOut
SystemTime = Time()
DateOut = 1482936379
If SystemTime > DateOut Then 
	TracePrint SystemTime
	TracePrint DateOut
	EndScript
End If

Tap 0, 0
Tap 0, 0
Rem initialize
Dim iPos(1),iRect,btmp
Dim rScale,iRot
Dim NoSynergismeP
Dim coOrange, coPurple, coRed, coYellow, coGrey, coCyan
Dim coBlack, coCyan2, coCyan3, coPurple2
Dim coWine, coSkin, coDarkSkin, coGrey2,coWhite

Dim iClickLevelup,iClickLeveldown,iClickLevellowest
Dim iPosReidooburiHP,iClickNone,iPosStart,iClickStart
Dim iPosMainMenu,iPosMainHome,iClickMainHome,iPosMainBattleP,iClickSkip,iPosMainBattle,iClickMainBattle,iPosMenuBattleHome,iClickMenuBattleHome
Dim iPosMenuBattleP,iPosChooseOpponent,iClickChooseOpponent
Dim iPosMenuBattle,iPosBattleList,iPosBattleListHome,iClickBattleListHome,iPosYes,iClickYes,iPosNo,iClickNo
Dim iPosChoose,iPosOk,iClickOk,iClickSysOk
Dim iClickMainSynergisme,iPosMenuSynergisme,iPosMenuSynergismeP,iPosMenuSynergismePMax,iPosReidooburiSeach,iClickReidooburiSeach
Dim iPosSynergismeList,iClickSynergismeList,iPosSynergismeGift,iClickSynergismeGift
Dim iPosMenuSynergismeListMenu,iPosSimpleSynergisme,iClickSimpleSynergisme,iPosMissionList,iClickMissionList,iPosMissionContinue
Dim iClickNoHelpSynergisme,iClickFisrtHeler,iClickGlobalRequest,iPosOnePBattle,iClickOnePBattle,iClick3PBattle,iPosExploreHome,iPosNoExploreP
Dim iPosTakeGift,iClickTakeGift,iPosGiftMenu

Dim sColorStart, sColorMainMenu, sColorMainHome, sColorMainBattleP, sColorMainBattle
Dim sColorMainExplore, sColorMainExploreP, sColorMenuBattleHome, sColorMenuBattleP
Dim sColorChooseOpponent, sColorMenuBattle, sColorBattleList, sColorBattleListHome
Dim sColorYes, sColorNo, sColorChoose, sColorOk
Dim sColorMainSynergismeP, sColorMenuSynergisme, sColorMenuSynergismeP, sColorReidooburiSeach
Dim sColorSynergismeList, sColorSynergismeGift, sColorMenuSynergismeListMenu, sColorSimpleSynergisme
Dim sColorMissionList, sColorMissionContinue, sColorGiftMenu, sColorExploreHome, sColorNoExploreP
Dim sColorReidooburiHP

Dim sReset,Retry, Cycles, RSAT, RST,Helper,PunchPower,DogeMode
Dim tRSAT,tRST
Dim rTimeStep03, rTimeStep05, rTimeStep, rTimeStep2
Dim iTimeOut, iTimeOut2, iTimeOut3
Dim iPutFlag, iRedFlag, sLevel, sDesFlag
Dim RLcount, RDcount
Dim sColorLv1,iPosLv1,iLv1,iDoge,isDoge,sPosLv1

isDoge = 0

rScale = 1
RDcount = 0
RLcount = 0
rTimeStep03 = 0.33
rTimeStep05 = 0.5
rTimeStep = 1
rTimeStep2 = 2
iTimeOut = 60
iTimeOut2 = 120
iTimeOut3 = 180

coOrange = "3B8CF5-090909"
coPurple = "F745A8-091009"
coPurple2 = "FC2AE2-090911"
coRed = "2B2BF8-090909"
'coYellow = "40EBFE-090909"
coYellow = "40DBFE-091209"
coGrey = "6E5C25-090909"
coGrey2 = "CCC2B7-090909"
coCyan = "FFDC43-090909"
coCyan2 = "EEEC82-090909"
coCyan3 = "FDF01C-090909"
coSkin = "BCE3FE-090909"
coDarkSkin = "8F96B6-090909"
coBlack = "000000-050505"
coWine = "170E73-090909"
coWhite = "FFFFFF"


sColorLv1= coWhite
sColorStart = coRed
sColorMainMenu = coBlack
sColorMainHome = coCyan
sColorMainBattleP = coYellow
sColorMainBattle = coOrange
sColorMainExplore = coDarkSkin
sColorMainExploreP = coYellow
sColorMenuBattleHome = coPurple
sColorMenuBattleP = coYellow
sColorChooseOpponent = coWine
sColorMenuBattle = coCyan2
sColorBattleList = coCyan2
sColorBattleListHome = coPurple
sColorYes = coRed
sColorNo = coPurple
sColorChoose = coSkin
sColorOk = coRed
sColorMainSynergismeP = coYellow
sColorMenuSynergisme = coYellow
sColorMenuSynergismeP = coYellow
sColorReidooburiSeach = coOrange
sColorSynergismeList = coCyan3
sColorSynergismeGift = coGrey2
sColorMenuSynergismeListMenu = coOrange
sColorSimpleSynergisme = coRed
sColorMissionList = coYellow
sColorMissionContinue = coRed
sColorGiftMenu = coPurple
sColorExploreHome = coPurple
sColorNoExploreP = coOrange
sColorReidooburiHP = coPurple2

NoSynergismeP = False
Retry = 1
iPos(0) = 0
iPos(1) = 0
iRect = GetScreenX()
//If iRect <> 1280 Then 
//	//ShowMessage "Device screen width <> 1280, stop"
//	EndScript
//End If
TracePrint "X:",GetScreenX()," Y:",GetScreenY()

If 0.5625 = GetScreenY() / GetScreenX() Then 
	iRot = 1
	rScale = GetScreenX() / 1280
ElseIf 0.5625 = GetScreenX() / GetScreenY() Then
	iRot = 0
	rScale = GetScreenY() / 1280
Else 
	TracePrint "Screen is not 16:9"
	EndScript
End If

iClickLevelup = Array(500, 300)
iClickLeveldown = Array(500, 600)
iClickLevellowest = Array(500, 700)

//ReidooburiHP
iPosReidooburiHP = Array(920, 182)
sPosLv1 = Array(898, 145)
iPosLv1 = sPosLv1

// Points
iClickNone = Array(1050,200)

iPosStart = Array(600,565)
iClickStart = Array(600, 565)

iPosMainMenu = Array(1070,25)

iPosMainHome = Array(1200,75)
iClickMainHome = Array(1200,75)


iPosMainBattleP = Array(615, 660)

iClickSkip = Array(1215,700)

iPosMainBattle = Array(570,620)
iClickMainBattle = Array(570,620)

iPosMenuBattleHome = Array(1220,20)
iClickMenuBattleHome = Array(1220,20)

iPosMenuBattleP = Array(110,30)

iPosChooseOpponent = Array(800,700)
iClickChooseOpponent = Array(800,700)

iPosMenuBattle = Array(20,150)

iPosBattleList = Array(685,10)

iPosBattleListHome = Array(1220, 20)
iClickBattleListHome = Array(1220, 20)

iPosYes = Array(480,540)
iClickYes = Array(480, 540)

iPosNo = Array(800,540)
iClickNo = Array(800,540)

iPosChoose = Array(320,155)

iPosOk = Array(615,500)
iClickOk = Array(615,500)
iClickSysOk = Array(640, 410)

//Synergisme
iClickMainSynergisme = Array(1060, 120)

iPosMenuSynergisme = Array(610, 50)
iPosMenuSynergismeP = Array(165, 30)
iPosMenuSynergismePMax = Array(220, 30)
iPosReidooburiSeach = Array(490, 650)
iClickReidooburiSeach = Array(490, 650)

iPosSynergismeList = Array(1100, 650)
iClickSynergismeList = Array(1170, 650)
iPosSynergismeGift = Array(50, 185)
iClickSynergismeGift = Array(50, 185)

iPosMenuSynergismeListMenu = Array(950, 30)
iPosSimpleSynergisme = Array(860, 190)
iClickSimpleSynergisme = Array(860, 190)

iPosMissionList = Array(170, 600)
iClickMissionList = Array(170, 600)
iPosMissionContinue = Array(790, 550)

iClickNoHelpSynergisme = Array(320, 100)
iClickFisrtHeler = Array(320, 250)
iClickGlobalRequest = Array(60, 650)

iPosOnePBattle = Array(500,650)
iClickOnePBattle = Array(500, 650)
iClick3PBattle = Array(700, 650)
iPosExploreHome = Array(1180, 20)
//Color
iPosNoExploreP = Array(500, 650)

iPosTakeGift = Array(20, 635)
iClickTakeGift = Array(20, 635)
iPosGiftMenu = Array(20, 520)
///////////////////////////////////////////////////////////////////////////////////

//Zero
If ReadUIConfig("sReset ")=true then
    sDesFlag = 1 
	Else
    sDesFlag = 0
End If
tRSAT = ReadUIConfig("iRSAT", "10")
tRST = ReadUIConfig("iRST", "5")
RSAT = CInt(tRSAT)
RST = CInt(tRST)
RunApp "com.square_enix.ocsd.magical"
ShowMessage "初始化完成"
Delay 10000
Rem CIFMM

//UI tset

If ReadUIConfig("sDesFlag")=true then
    sDesFlag = 1 
	Else
    sDesFlag = 0
End If
If ReadUIConfig("iPutFlag")=true then
    iPutFlag = 1
    TracePrint "put 1"
	Else
    iPutFlag = 0
    TracePrint "put 0"
End If
If ReadUIConfig("iRedFlag")=true then
    iRedFlag = 1
    TracePrint "red 1"
	Else
    iRedFlag = 0
    TracePrint "red 0"
End If
If ReadUIConfig("PunchPower")=true then
    PunchPower = 1
    TracePrint "全力4倍攻击"
	Else 
    PunchPower = 0
   TracePrint  "通常攻击"
End If
If ReadUIConfig("DogeMode")=true then
    DogeMode = 1
    TracePrint "秀恩爱"
	Else 
    DogeMode = 0
    TracePrint  "爱护动物"
End If
If ReadUIConfig("sLevel")=0 then
	ShowMessage "当前选择为不进行协力战"
	sLevel = 0
ElseIf ReadUIConfig("sLevel") = 1 Then
	sLevel = 1
	ShowMessage "当前选择的难度是初级"
ElseIf ReadUIConfig("sLevel") = 2 Then
	sLevel = 2
	ShowMessage "当前选择的难度是中级"
ElseIf ReadUIConfig("sLevel") = 3 Then
	sLevel = 3
	ShowMessage "当前选择的难度是上级"
ElseIf ReadUIConfig("sLevel") = 4 Then
	sLevel = 4
	ShowMessage "当前选择的难度是超级"
ElseIf ReadUIConfig("sLevel")=5 then
	ShowMessage "当前选择的难度是超弩级"
	sLevel = 5
End If
If ReadUIConfig("Cycles") = 0 Then 
	Cycles = 30
ElseIf ReadUIConfig("Cycles") = 1 Then
	Cycles = 60
ElseIf ReadUIConfig("Cycles") = 2 Then
	Cycles = 120
ElseIf ReadUIConfig("Cycles") = 3 Then
	Cycles = 300
ElseIf ReadUIConfig("Cycles") = 4 Then
	Cycles = 600
ElseIf ReadUIConfig("Cycles")=5 then
	Cycles = 1800
End if
If ReadUIConfig("Helper") = 0 Then 
	Helper = 0
ElseIf ReadUIConfig("Helper") = 1 Then
	Helper = 1
ElseIf ReadUIConfig("Helper") = 2 Then
	Helper = 2
End If

'iPutFlag = 1
'DogeMode = 1
'sLevel = 1
'PunchPower = 1
'Helper = 2

//reset anything
If Retry > RSAT Then 
    If sReset = 0 Then
    EndScript
    End If
    KillApp "com.square_enix.ocsd.magical"
    Goto initialize
End If


// Reset
If Retry > RST Then 
	KillApp "com.square_enix.ocsd.magical"
    Delay 10000
    RunApp "com.square_enix.ocsd.magical"
    Delay 10000
    
End If
TracePrint "Check if main menu"
// Check if main menu
btmp = bFlag(iRot, rScale, iPosStart(0), iPosStart(1), iClickNone(0), iClickNone(1), sColorStart, 0, rTimeStep, 0, 1)
If btmp = 1 Then
    fTap(iClickStart(0), iClickStart(1), iRot, rScale)
    Delay 50
    fTap(iClickStart(0), iClickStart(1), iRot, rScale)
    Delay 50
End If

// Check if main menu & refresh
btmp = bFlag(iRot, rScale, iPosMainMenu(0), iPosMainMenu(1), iClickMainHome(0),iClickMainHome(1), sColorMainMenu, 0, rTimeStep, 0, iTimeOut)
If btmp = 0 Then
    //MessageBox "Cannot find main menu, stop"
    //EndScript
    fTap(iClickNo(0), iClickNo(1), iRot, rScale)
    Delay 1000
    For 10
        fTap(iClickMainHome(0), iClickMainHome(1), iRot, rScale)
        Delay 500
    Next
    fTap(iClickOk(0), iClickOk(1), iRot, rScale)
    Delay 500
    fTap(iClickSysOk(0), iClickSysOk(1), iRot, rScale)
    Delay 500
    Delay 1000
    Retry=Retry+1
    Goto Refresh
End If

btmp = bFlag(iRot, rScale, iPosMainHome(0), iPosMainHome(1), iClickSkip(0),iClickSkip(1), sColorMainHome, 0, rTimeStep03, 0, iTimeOut3)
If btmp = 0 Then
    Goto Refresh
End If

If sDesFlag = 0 Then 
	Goto NBP
End If

// Check for batttle P
btmp = bFlag(iRot, rScale, iPosMainBattleP(0), iPosMainBattleP(1), iClickSkip(0),iClickSkip(1), sColorMainBattleP, 0, rTimeStep2, 0, 1)
If btmp = 0 Then
	If sLevel > 0 Then 
	Goto NBP
	End If
	Else
End If 

TracePrint "Enter battle menu "
// Enter battle menu 
btmp = bFlag(iRot, rScale, iPosMenuBattle(0), iPosMenuBattle(1), iClickMainBattle(0),iClickMainBattle(1), sColorMenuBattle, 0, rTimeStep2, 0, iTimeOut)
If btmp = 0 Then 
    Goto  NBP
End If

// Sure battleP
btmp = bFlag(iRot, rScale, iPosMenuBattleP(0), iPosMenuBattleP(1), iClickNone(0),iClickNone(1), sColorMenuBattleP, 0, rTimeStep, 0, 2)
If btmp = 0 Then 
    Goto  NBP
End If


// Enter battle list
fTap(iPosMainBattleP(0), iPosMainBattleP(1), iRot, rScale)
Delay 100

// Lase check for BattleP 
btmp = bFlag(iRot, rScale, iPosMenuBattleP(0), iPosMenuBattleP(1), iClickNo(0), iClickNo(1), sColorMenuBattleP, 0, rTimeStep, 0, 10)
If btmp = 0 Then 
    Goto NBP	
End If

btmp = bFlag(iRot, rScale, iPosBattleList(0), iPosBattleList(1), iClickNo(0), iClickNo(1), sColorBattleList, 0, rTimeStep, 0, 10)
If btmp = 0 Then 
    Goto Refresh	
End If

// Choose last one and fight!
fSwipe(706, 706, 706, 150, iRot, rScale)
Delay 2000
fTap(iPosMainBattleP(0), iPosMainBattleP(1), iRot, rScale)
Delay 200
fTap(iClickYes(0), iClickYes(1), iRot, rScale)
Delay 1300
fTap(iClickNo(0), iClickNo(1), iRot, rScale)
Delay 50

btmp = bFlag(iRot, rScale, iPosMenuBattle(0), iPosMenuBattle(1), iClickMainHome(0),iClickMainHome(1), sColorMenuBattle, 0, rTimeStep, 0, iTimeOut)
If btmp = 0 Then 
    Goto Refresh
End If	


// No BattleP
Rem NBP

//backhome
btmp = bFlag(iRot, rScale, iPosMainMenu(0), iPosMainMenu(1), iClickMainHome(0),iClickMainHome(1), sColorMainMenu, 0, rTimeStep, 0, iTimeOut)
If btmp = 0 Then 
    Goto Refresh
End If	


// Check Synergism Battle Mode
If sLevel = 0 Then 
	Goto Wait
End If
//EnterSynergismeMenu
btmp = bFlag(iRot, rScale, iPosMenuSynergisme(0), iPosMenuSynergisme(1), iClickMainSynergisme(0), iClickMainSynergisme(1), sColorMenuSynergisme, 0, rTimeStep, 0, iTimeOut)
If btmp = 0 Then 
   	Goto Refresh	
End If

//CheckPutMode
TracePrint "CheckPutMode"
Rem CPM
RLcount = 0
If iPutFlag = 0 Then 
	Goto CRL
End If

//CheckSynergismeP
btmp = bFlag(iRot, rScale, iPosMenuSynergismeP(0), iPosMenuSynergismeP(1), iClickNone(0), iClickNone(1), sColorMenuSynergismeP, 0, rTimeStep, 0, 1)
If btmp = 0 Then 
	NoSynergismeP = True
//CheckiRedFlag
If iRedFlag = 0 Then 
Goto CRL
End If
	Else 
	NoSynergismeP = False	
End If

//Checkbattling
btmp = bFlag(iRot, rScale, iPosReidooburiSeach (0), iPosReidooburiSeach (1), iClickNone(0), iClickNone(1), sColorReidooburiSeach, 0, rTimeStep, 0, 2)
If btmp = 0 Then 

//CheckSynergismePMAX
Rem CSPMAX
btmp = bFlag(iRot, rScale, iPosMenuSynergismePMax(0), iPosMenuSynergismePMax(1), iClickNone(0), iClickNone(1), sColorMenuSynergismeP, 0, rTimeStep, 0, 1)
	If btmp = 0 Then 
		Goto CRL
	End If
	//CheckiRedFlag
		If iRedFlag = 0 Then 
			Goto Fdoge
			Else 
			Goto CRL
		End If
   	Else 
   		Goto SR
End If

//SeachReidooburi
Rem SR
btmp = bFlag(iRot, rScale, iPosMissionList(0), iPosMissionList(1), iClickReidooburiSeach(0), iClickReidooburiSeach(1), sColorMissionList, 0, rTimeStep, 0, iTimeOut)
If btmp = 0 Then 
btmp = bFlag(iRot, rScale, iPosMissionContinue(0), iPosMissionContinue(1), iClickReidooburiSeach(0), iClickReidooburiSeach(1), sColorMissionContinue, 0, rTimeStep, 0, 1)
If btmp = 0 Then 
   	Goto Refresh	
	End If
End If
fTap(iPosMissionList(0), iPosMissionList(1), iRot, rScale)
Delay 1000

//iflevel
If sLevel = 1 Then 
	fTap(iClickLevelup(0), iClickLevelup(1), iRot, rScale)
Else 
	If sLevel = 2 Then 
		fTap(iClickLeveldown(0), iClickLeveldown(1), iRot, rScale)
	Else 
		If sLevel = 3 Then 
			fTap(iClickLevellowest(0), iClickLevellowest(1), iRot, rScale)
		End if
	End If
End If

If sLevel > 3  Then 
	fSwipe(706, 706, 706, 150, iRot, rScale)
	Delay 2000
End If

If sLevel = 4 Then 
	fTap(iClickLevelup(0), iClickLevelup(1), iRot, rScale)
Else 
	if sLevel = 5 then
		fTap(iClickLeveldown(0), iClickLeveldown(1), iRot, rScale)
	End If
End If

Delay 500
//Isure
Delay 1000
fTap(iClickYes(0), iClickYes(1), iRot, rScale)
Delay 3000
fTap(iClickYes(0), iClickYes(1), iRot, rScale)
Delay 1000

//CheckExploring
Rem CEing
btmp = bFlag(iRot, rScale, iPosExploreHome(0), iPosExploreHome(1), iClickYes(0), iClickYes(1), sColorExploreHome, 0, rTimeStep, 0, 5)
If btmp = 1 Then 
   	Goto Refresh	
End If

//CheckExploreState
Rem CES
btmp = bFlag(iRot, rScale, iPosExploreHome(0), iPosExploreHome(1), iClickOk(0), iClickOk(1), sColorExploreHome, 0, rTimeStep03, 0, iTimeOut3)
If btmp = 0 Then 
   	Goto Refresh	
End If

//Check ExploreP
Delay 1000
If -1 <> fCmpColor(iPosNoExploreP(0), iPosNoExploreP(1), sColorNoExploreP, 1, iRot, rScale) Then
	fTap(iPosNoExploreP(0), iPosNoExploreP(1), iRot, rScale)
	Delay 5000
	fTap(iClickYes(0), iClickYes(1), iRot, rScale)
	Delay 3000
	Goto CEing	
End If

//FuckingDoge
Rem FDoge
If PunchPower = 1 Then 
	Goto fight
End If
If DogeMode = 1 Then 
TracePrint sPosLv1(0)
TracePrint sPosLv1(1)
	iLv1 = 0
	iDoge = 0
	isDoge = 0
	iPosLv1(0) = sPosLv1 (0)
	Do While iDoge < 30
		If iLv1 < 2 Then 
			iPosLv1(0) = iPosLv1(0) - 1
			TracePrint iPosLv1(0)
			btmp = fCmpColor(iPosLv1(0), sPosLv1(1), sColorLv1, 1, iRot, rScale)
				if btmp = -1 then
    				iLv1 = 0
    				TracePrint "不是白色"
				Else
    				TracePrint "是白色!"
    				iLv1 = iLv1 + 1
				End If
			
			Else 
			isDoge = 0
			TracePrint "No Doge!!"
			Goto fight
		End If
		Delay 50
		iDoge = iDoge + 1
	Loop
	isDoge = 1
	TracePrint "Is Doge!!"
End If

//fight
Rem fight
fTap iClickOnePBattle(0), iClickOnePBattle(1), iRot, rScale
Delay 1000
//CheckSynergismeP
btmp = bFlag(iRot, rScale, iPosMenuSynergismeP(0), iPosMenuSynergismeP(1), iClickNone(0), iClickNone(1), sColorMenuSynergismeP, 0, rTimeStep, 0, 1)
If btmp = 0 Then 
	NoSynergismeP = True
	Else 
	NoSynergismeP = False
End If

//CheckIsDoge
If isDoge = 1 Then 
	Goto FullP
End If

//CheckPunchPower
If PunchPower = 0 Then 
	TracePrint "PunchPower 0"
	Goto OnePF
End If

//FullPunch
Rem FullP
TracePrint "FullPunch"
fTap (iClick3PBattle(0), iClick3PBattle(1), iRot, rScale)
Delay 1400
If Helper = 1 Then 
	fTap(iClickOnePBattle(0), iClickOnePBattle(1), iRot, rScale)
	Delay 800
ElseIf Helper = 2 Then 
	fTap(iClickFisrtHeler(0), iClickFisrtHeler(1), iRot, rScale)
	Delay 800
End If
fTap(iClickNoHelpSynergisme(0), iClickNoHelpSynergisme(1), iRot, rScale)
Delay 1500
fTap(iClickYes(0), iClickYes(1), iRot, rScale)
Delay 1500
Goto CHSP

//oneP flight
Rem OnePF
TracePrint "One P Flight"
fTap (iClickOnePBattle(0), iClickOnePBattle(1), iRot, rScale)
Delay 1400
If Helper = 1 Then 
	fTap(iClickOnePBattle(0), iClickOnePBattle(1), iRot, rScale)
	Delay 800
ElseIf Helper = 2 Then 
	fTap(iClickFisrtHeler(0), iClickFisrtHeler(1), iRot, rScale)
	Delay 800
End If
fTap(iClickNoHelpSynergisme(0), iClickNoHelpSynergisme(1), iRot, rScale)
Delay 1500
fTap(iClickYes(0), iClickYes(1), iRot, rScale)
Delay 1500


//checkHaveSynergismeP
Rem CHSP
If NoSynergismeP = True Then 
	Delay 3000
	fTap(iClickYes(0), iClickYes(1), iRot, rScale)
	Delay 1000
ElseIf PunchPower = 1 Then
	If iRedFlag = 1 Then
	Delay 3000
	fTap(iClickYes(0), iClickYes(1), iRot, rScale)
	Delay 1000
	ElseIf isDoge = 1 Then
	Delay 3000
	fTap(iClickYes(0), iClickYes(1), iRot, rScale)
	Delay 1000
	Else	
	Delay 3000
	fTap(iClickNo(0), iClickNo(1), iRot, rScale)
	Delay 1000
	End If
End If


//Battling
btmp = bFlag(iRot, rScale, iPosMenuSynergisme(0), iPosMenuSynergisme(1), iClickOk(0), iClickOk(1), sColorMenuSynergisme, 0, rTimeStep03, 0, iTimeOut3)
If btmp = 0 Then 
   	Goto Refresh	
End If
//GlobalRequest
fTap(iClickGlobalRequest(0), iClickGlobalRequest(1), iRot, rScale)
Delay 1500
fTap(iClickYes(0), iClickYes(1), iRot, rScale)
Delay 2000
fTap(iClickOk(0), iClickOk(1), iRot, rScale)
Delay 2000
btmp = bFlag(iRot, rScale, iPosMenuSynergisme(0), iPosMenuSynergisme(1), iClickOk(0), iClickOk(1), sColorMenuSynergisme, 0, rTimeStep, 0, iTimeOut)
If btmp = 0 Then 
   	Goto Refresh	
End If

//CheckRequireList
Rem CRL
TracePrint "CheckRequireList"
RLcount = RLcount + 1
RDcount = RDcount + 1
If RLcount > 5 Then 
	Goto CPM
End If
//CheckReiDooburiHP
If -1 <> fCmpColor(iPosReidooburiHP(0), iPosReidooburiHP(1), sColorReidooburiHP, 1, iRot, rScale) Then
	Goto Fdoge
	/*
	If PunchPower = 0 Then 
		Goto OnePF
	Else 
		Goto FullP
	End If
	*/
End If
//sColorSynergismeList bequal=2
btmp = bFlag(iRot, rScale, iPosSynergismeList(0), iPosSynergismeList(1), iClickNone(0), iClickNone(1), sColorSynergismeList, 0, rTimeStep05, 0, 5)
TracePrint "sColorSynergismeList bequal=2"
If btmp = 0 Then 
TracePrint "GOTO CSPM"
   	Goto CSPM	
End If
fTap(iClickSynergismeList(0), iClickSynergismeList(1), iRot, rScale)
Delay 600
//CheckRequireListMenu
btmp = bFlag(iRot, rScale, iPosMenuSynergismeListMenu(0), iPosMenuSynergismeListMenu(1), iClickNone(0), iClickNone(1), sColorMenuSynergismeListMenu, 0, rTimeStep05, 0, 10)
If btmp = 0 Then 
   	Goto Refresh	
End If
//CheckSimpleRequire
btmp = bFlag(iRot, rScale, iPosSimpleSynergisme(0), iPosSimpleSynergisme(1), iClickNone(0), iClickNone(1), sColorSimpleSynergisme, 0, rTimeStep, 0, 1)
If btmp = 0 Then 
   	fTap(iClickMainHome(0), iClickMainHome(1), iRot, rScale)
	Delay 1000
	Goto CSPM
End If
//ClickSimpleSynergisme
fTap(iClickSimpleSynergisme(0), iClickSimpleSynergisme(1), iRot, rScale)
Delay 600
btmp = bFlag(iRot, rScale, iPosMenuSynergisme(0), iPosMenuSynergisme(1), iClickOk(0), iClickOk(1), sColorMenuSynergisme, 0, rTimeStep03, 0, iTimeOut3)
If btmp = 0 Then 
	Goto Refresh
End If
If RDcount > 65 Then 
	Goto CG
End If
Goto CRL

//3PLickOther
Rem CSPM
If iPutFlag = 1 Then 
	Goto CG
End If
btmp = bFlag(iRot, rScale, iPosSynergismeList(0), iPosSynergismeList(1), iClickNone(0), iClickNone(1), sColorSynergismeList, 0, rTimeStep05, 0, 5)
If btmp = 0 Then 
TracePrint "CG"
   	Goto CG	
End If
//CheckSynergismePMAX
btmp = bFlag(iRot, rScale, iPosMenuSynergismePMax(0), iPosMenuSynergismePMax(1), iClickNone(0), iClickNone(1), sColorMenuSynergismeP, 0, rTimeStep, 0, 1)
If btmp = 0 Then 
	Goto CG
End If
//EnterRequireList
fTap(iClickSynergismeList(0), iClickSynergismeList(1), iRot, rScale)
Delay 600
//CheckRequireListMenu
btmp = bFlag(iRot, rScale, iPosMenuSynergismeListMenu(0), iPosMenuSynergismeListMenu(1), iClickNone(0), iClickNone(1), sColorMenuSynergismeListMenu, 0, rTimeStep, 0, 10)
If btmp = 0 Then 
   	Goto Refresh	
End If
fTap(iPosSynergismeGift(0), iPosSynergismeGift(1), iRot, rScale)
Delay 900
btmp = bFlag(iRot, rScale, iClick3PBattle(0), iClick3PBattle(1), iClickNone(0), iClickNone(1),sColorYes, 0, rTimeStep, 0,1)
If btmp = 0 Then 
   	Goto Refresh	
End If
fTap(iClick3PBattle(0), iClick3PBattle(1), iRot, rScale)
Delay 1000
fTap(iClickNoHelpSynergisme(0), iClickNoHelpSynergisme(1), iRot, rScale)
Delay 1500
btmp = bFlag(iRot, rScale, iPosMenuSynergisme(0), iPosMenuSynergisme(1), iClickOk(0), iClickOk(1), sColorMenuSynergisme, 0, rTimeStep03, 0, iTimeOut3)
If btmp = 0 Then 
   	Goto Refresh	
End If


//CheckGift
Rem CG
btmp = bFlag(iRot, rScale, iPosSynergismeGift(0), iPosSynergismeGift(1), iClickNone (0), iClickNone (1),sColorSynergismeGift, 0, rTimeStep, 0, 1)
If btmp = 0 Then 
   	Goto Wait	
End If

btmp = bFlag(iRot, rScale, iPosGiftMenu(0), iPosGiftMenu(1), iClickSynergismeGift(0), iClickSynergismeGift(1),sColorGiftMenu, 0, rTimeStep, 0, iTimeOut)
If btmp = 0 Then 
   	Goto Refresh	
End If
fTap(iClickTakeGift(0), iClickTakeGift(1), iRot, rScale)
Delay 1500
btmp = bFlag(iRot, rScale, iPosMainHome(0), iPosMainHome(1), iClickMainHome(0),iClickMainHome(1), sColorMainHome, 0, rTimeStep2, 0, iTimeOut)
If btmp = 0 Then
   	Goto Refresh	
End If
btmp = bFlag(iRot, rScale, iPosMainMenu(0), iPosMainMenu(1), iClickMainHome(0),iClickMainHome(1), sColorMainMenu, 0, rTimeStep, 0, iTimeOut)
If btmp = 0 Then
   	Goto Refresh	
End If
RDcount = 0
Goto Refresh

//Wait30s to 5min
Rem Wait
Retry = 1
//Randomize
//Delay int((Rnd * 10 * 6000 * Cycles + 10000))
Delay Cycles*1000

//Refresh
TracePrint "Refresh"
Rem Refresh
fTap(iClickMainHome(0), iClickMainHome(1), iRot, rScale)
Delay 10
Delay 1000
RLcount = 0
Goto CIFMM


Function bFlag(rotate, scale, ix, iy, icx, icy, scolor, bequal, rtime, itime, ntime)

// check if color(ix,iy).bequal.scolor, if not, click icx,icy once, wait rtime
// Do until color(ix,iy).bequal.scolor or times gt ntime
// if color is found, return 1, else if time out, return 0

	Do While itime < ntime
		If 0 = bequal and -1 <> fCmpColor(ix, iy, scolor, 1, rotate, scale) Then 
			bFlag = 1
			Exit Do
		ElseIf 1 = bequal and -1 = fCmpColor(ix, iy, scolor, 1, rotate, scale) Then 
			bFlag = 1
			Exit Do
		End If
		fTap(icx, icy, rotate, scale)
		Delay rtime * 1000
		itime = itime + 1
	Loop
	
	If itime >= ntime Then 
		bFlag = 0
	End If
	
End Function

Sub fTap(ix, iy, rotate, scale)

	Dim iix, iiy

	Select case rotate
	Case 1
	  iix = ix
	  iiy = iy
	Case 0
	  iiy = ix
	  iix = 720 - iy
	Case Else
	  EndScript
	End Select

	Tap Cint(iix*scale), Cint(iiy*scale)

End Sub

Sub fSwipe(ix1, iy1, ix2, iy2, rotate, scale)

	Dim iix1, iiy1, iix2, iiy2

	Select case rotate
	Case 1
		iix1 = ix1
		iiy1 = iy1
		iix2 = ix2
		iiy2 = iy2
	Case 0
		iiy1 = ix1
		iix1 = 720 - iy1
		iiy2 = ix2
		iix2 = 720 - iy2
	Case Else
		EndScript
	End Select

	Swipe Cint(iix1*scale), Cint(iiy1*scale), Cint(iix2*scale), Cint(iiy2*scale)

End Sub

Function fCmpColor(ix, iy, scolor, bequal, rotate, scale)
	
	Dim iix, iiy

	Select case rotate
	Case 1
	  iix = ix
	  iiy = iy
	Case 0
	  iiy = ix
	  iix = 720 - iy
	Case Else
	  EndScript
	End Select

	fCmpColor = CmpColor(Cint(iix*scale), Cint(iiy*scale), scolor, bequal)
	
End Function

/*
Function bFlag(rotate, scale, ix, iy, icx, icy, scolor, bequal, rtime, itime, ntime)
// click icx,icy once, wait rtime, then check ix,iy. Do until color(ix,iy).bequal.scolor or times gt ntime
// if color is found, return 1, else if time out, return 0
//Dim ix, iy, scolor, rtime, itime, ntime, btmp

Dim rtime_in
If itime >= ntime Then 
	bFlag = 0
Else 
	If 0 = bequal and -1 <> fCmpColor(ix, iy, scolor, 1, rotate, scale) Then 
		bFlag = 1
	ElseIf 1 = bequal and -1 = fCmpColor(ix, iy, scolor, 1, rotate, scale) Then 
		bFlag = 1
	Else 
		itime = itime + 1
		fTap(icx, icy, rotate, scale)
		rtime_in = rtime * (1.0)
		Delay Int(rtime_in * 1000)
		btmp = bFlag(rotate, scale, ix, iy, icx, icy, scolor, bequal, rtime, itime, ntime)
		bFlag = btmp
	End If
End If
End Function

Sub fTap(ix, iy, rotate, scale)

Dim iix, iiy

Select case rotate
Case 1
  iix = ix
  iiy = iy
Case 0
  iiy = ix
  iix = 720 - iy
Case Else
  EndScript
End Select

Tap Cint(iix*scale), Cint(iiy*scale)

End Sub

Sub fSwipe(ix1, iy1, ix2, iy2, rotate, scale)

Dim iix1, iiy1, iix2, iiy2

Select case rotate
Case 1
  iix1 = ix1
  iiy1 = iy1
  iix2 = ix2
  iiy2 = iy2
Case 0
  iiy1 = ix1
  iix1 = 720 - iy1
  iiy2 = ix2
  iix2 = 720 - iy2
Case Else
  EndScript
End Select

Swipe Cint(iix1*scale), Cint(iiy1*scale), Cint(iix2*scale), Cint(iiy2*scale)

End Sub

Function fCmpColor(ix, iy, scolor, bequal, rotate, scale)
	
Dim iix, iiy

Select case rotate
Case 1
  iix = ix
  iiy = iy
Case 0
  iiy = ix
  iix = 720 - iy
Case Else
  EndScript
End Select

fCmpColor = CmpColor(Cint(iix*scale), Cint(iiy*scale), scolor, bequal)
	
End Function
*/